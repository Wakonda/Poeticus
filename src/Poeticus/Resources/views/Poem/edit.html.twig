{% extends generic_layout %}

{% block head_title %}{{ 'menu.left.Admin'|trans }} - {{ 'admin.index.Poem'|trans }}{% endblock %}
{% block main_title %}{{ 'menu.left.Admin'|trans }} - {{ 'admin.index.Poem'|trans }}{% endblock %}

{% block style_additional %}
	<link rel="stylesheet" type="text/css" href="{{ app.request_stack.currentrequest.basepath }}/js/jquery.ajax-combobox-master/dist/jquery.ajax-combobox.css" media="screen" />
	<link rel="stylesheet" type="text/css" href="{{ app.request_stack.currentrequest.basepath }}/js/redactor/css/redactor.css" />
{% endblock %}

{% block script_additional %}
	<script src="{{ app.request_stack.currentrequest.basepath }}/js/jquery.ajax-combobox-master/dist/jquery.ajax-combobox.js"></script>
	<script src="{{ app.request_stack.currentrequest.basepath }}/js/combobox.js"></script>
	<script src="{{ app.request_stack.currentrequest.basepath }}/js/redactor/redactor.min.js"></script>
	<script type="text/javascript">
		$(function()
		{
			$('.redactor').redactor({
				autoresize: false,
				minHeight: 300,
				buttons: ['html']
			});

			$('#poem_authorType').change(function()
			{
				if($(this).val() == "user")
				{
					$("tr.user_row").show();
					$("tr.biography_row").hide();
					$("select#poem_biography").val("");
				}
				else
				{
					$("tr.user_row").hide();
					$("tr.biography_row").show();
					$("select#poem_user").val("");
				}
			});
			$('#poem_authorType').change();
			
			function putReleasedDate(value, load)
			{
				if(value != "")
					$("input#{{ form.unknownReleasedDate.vars.id }}").prop('checked', false);
				else
					$("input#{{ form.unknownReleasedDate.vars.id }}").prop('checked', true);
			}
			
			$("input#{{ form.unknownReleasedDate.vars.id }}").click(function()
			{
				if($(this).is(":checked"))
					$("#{{ form.releasedDate.vars.id }}").val("");
			});
			
			$("input#{{ form.releasedDate.vars.id }}").keyup(function()
			{
				putReleasedDate($(this).val(), false);
			});
			putReleasedDate("{{ entity.releasedDate }}", true);
			
			function changeBiography(val)
			{
				$.ajax({
					type: "POST",
					url: "{{ path('list_selected_biography') }}",
					data: { "id" : val },
					success: function(data)
					{
						if(data.country != "")
							$("td.poem-country").html('<img src="{{ app.request_stack.currentrequest.basepath }}/photo/country/'+ data.country.flag +'" class="flag" />' + ' ' + data.country.title);
						else
							$("td.poem-country").html("-");
					
						var collections = data.collections;
						$("#{{ form.collection.vars.id }} option").remove();
						$("#{{ form.collection.vars.id }}").append('<option value="">{{ 'main.field.ChooseAnOption'|trans }}</option>');
						$.each(collections, function(index, element)
						{
							$("#{{ form.collection.vars.id }}").append('<option value="'+ element.id +'">'+ element.title +'</option>');
						});
						{% if entity.collection is not null %}
							$("#{{ form.collection.vars.id }}").val("{{ entity.collection.id }}");
						{% endif %}
					}
				});
			}
			
			changeBiography($("#{{ form.biography.vars.id }}").val());
			
			$("#{{ form.collection.vars.id }}").change(function()
			{
				$.ajax({
					type: "POST",
					url: "{{ path('list_selected_collection') }}",
					data: { "id" : $(this).val() },
					success: function(data)
					{
						$("#{{ form.releasedDate.vars.id }}").val(data.releasedDate);
						
						if(data.releasedDate != null)
							$('input#poem_unknownReleasedDate').attr('checked', false);
						else
							$('input#poem_unknownReleasedDate').attr('checked', true);
					}
				});
			});
			
			$("#{{ form.poeticform.vars.id }}").change(function()
			{
				$.ajax({
					type: "POST",
					url: "{{ path('select_poeticform') }}",
					data: { "id" : $(this).val() },
					success: function(data)
					{
						if(data.typeContentPoem == "{{ constant('Poeticus\\Entity\\PoeticForm::IMAGETYPE') }}") {
							$("#text_container").hide();
							$("#photo_container").show();
						}
						else {
							$("#text_container").show();
							$("#photo_container").hide();
						}
					}
				});
			});

			$("#{{ form.poeticform.vars.id }}").change();
			$("#{{ form.collection.vars.id }}").change();
			
			$("select#{{ form.language.vars.id }}").change(function() {
				var input = $(".container_{{ form.biography.vars.id }} > .input-group > input[type='hidden']");
				$(input[0]).addClass('combobox full_width form-control').attr("type", "text").val("");
				$(".container_{{ form.biography.vars.id }}").parent().append(input[0]);
				$(".container_{{ form.biography.vars.id }}").remove();

				setComboboxEdit('{{ path("poemadmin_getbiographiesbyajax") }}?locale=' + $(this).val(), 'biography', "#{{ form.biography.vars.id }}", "{{ form.biography.vars.value }}", changeBiography);
			
				$.ajax({
					type: "GET",
					url: "{{ path('get_poeticforms_by_language') }}",
					data: { "locale" : $(this).val() },
					success: function(data)
					{
						$("select#{{ form.poeticform.vars.id }}").empty();
						$("select#{{ form.poeticform.vars.id }}").append('<option value="" selected="selected">{{ 'main.field.ChooseAnOption'|trans }}</option>');
						
						for (var i = 0; i < data.length; i++) {
							$("select#{{ form.poeticform.vars.id }}").append('<option value="'+ data[i].id +'">'+ data[i].name +'</option>');
						}
					}
				});
			});
			
			$("select#{{ form.language.vars.id }}").change();
		});
	</script>
{% endblock %}

{% block main_content %}
{% form_theme form 'Form/fields.html.twig' %}

{{ form_start(form, {'method' : 'post', 'action' : path('poemadmin_update', {'id' : entity.id }), 'attr': {'novalidate': 'novalidate'} }) }}
	{% include "Poem/_form.html.twig" with {'form': form} %}
{{ form_end(form) }}

{% endblock %}